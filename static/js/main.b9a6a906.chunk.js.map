{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","TodoListItem","important","label","onDeleted","onToggleImportant","onToggleDone","classNames","onClick","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9a6a906.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\r\n\r\nexport default AppHeader;","import React from \"react\";\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>My Todo List</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n    );\r\n};\r\nexport default AppHeader;","import SearchPanel from \"./search-panel\";\r\n\r\nexport default SearchPanel;","import React, {Component} from \"react\";\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n    state = {\r\n        term: ''\r\n    };\r\n\r\n    onSearchChange = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onSearchChange(term);\r\n    };\r\n\r\n    render() {\r\n        return (<input type=\"text\"\r\n                       className=\"search-input form-control\"\r\n                       placeholder='type to search'\r\n                       value={this.state.term}\r\n                       onChange={this.onSearchChange}/>\r\n        );\r\n    }\r\n}","import TodoListItem from \"./todo-list-item\";\r\n\r\nexport default TodoListItem;","import React, {Component} from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n        state = {\r\n           done:false,\r\n           important:false\r\n        };\r\n\r\n    render() {\r\n\r\n        const {label, onDeleted,\r\n        onToggleImportant,\r\n        onToggleDone,\r\n        important, done} = this.props;\r\n        let classNames = 'todo-list-item';\r\n        if(done) {\r\n            classNames += ' done';\r\n        }\r\n        if(important) {\r\n            classNames += ' important';\r\n        }\r\n        return (\r\n            <span className={classNames}>\r\n            <span\r\n                className=\"todo-list-item-label\"\r\n                onClick={ onToggleDone }>\r\n                {label}\r\n        </span>\r\n            <button type=\"button\"\r\n                    className=\"btn btn-outline-success btn-sm float-right\"\r\n                    onClick={onToggleImportant}>\r\n                <i className=\"fa fa-exclamation\"/>\r\n            </button>\r\n\r\n           <button type=\"button\"\r\n                   className=\"btn btn-outline-danger btn-sm float-right\"\r\n                   onClick={onDeleted}>\r\n                <i className=\"fa fa-trash-o\"/>\r\n            </button>\r\n        </span>\r\n        );\r\n    };\r\n}","import TodoList from \"./todo-list\";\r\n\r\nexport default TodoList;","import React from \"react\";\r\nimport TodoListItem from \"../todo-list-item\";\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({todos, onDeleted,\r\n                  onToggleImportant,\r\n                  onToggleDone}) => {\r\n    const elements = todos.map((item) => {\r\n        const {id, ...itemProps} = item;\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <TodoListItem {...itemProps}\r\n                onDeleted={() => onDeleted(id)}\r\n                onToggleImportant={() => onToggleImportant(id)}\r\n                onToggleDone={() => onToggleDone(id)}/>\r\n\r\n            </li>)\r\n    });\r\n\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            {elements}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import ItemStatusFilter from \"./item-status-filter\";\r\n\r\nexport default ItemStatusFilter;","import React, {Component} from \"react\";\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n    buttons = [\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'done', label: 'Done'}\r\n    ];\r\n\r\n    render() {\r\n        const {filter, onFilterChange} = this.props;\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const isActive = filter === name;\r\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n            return (\r\n                <button type=\"button\"\r\n                        className={`btn ${clazz}`}\r\n                        key = {name}\r\n                        onClick={() => onFilterChange(name)}>\r\n                    {label}\r\n                </button>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    };\r\n}","import ItemAddForm from \"./item-add-form\";\r\n\r\nexport default ItemAddForm;","import React, {Component} from \"react\";\r\nimport './item-add-form.css';\r\nexport default class ItemAddForm extends Component {\r\n\r\n    state = {\r\n      label: ''\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label:e.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"item-add-form d-flex\"\r\n            onSubmit = {this.onSubmit}>\r\n                <input type = \"text\"\r\n                       className=\"form-control\"\r\n                       onChange={this.onLabelChange}\r\n                       placeholder=\"What needs to be done\"\r\n                value = {this.state.label} />\r\n                <button className=\"btn btn-outline-secondary\">\r\n                    Add Item</button>\r\n            </form>\r\n        )\r\n    }\r\n}","import App from \"./app\";\r\n\r\nexport default App;","import React, {Component} from 'react';\r\n\r\nimport AppHeader from \"../app-header\";\r\nimport SearchPanel from \"../search-panel\";\r\nimport TodoList from \"../todo-list\";\r\nimport ItemStatusFilter from \"../item-status-filter\";\r\nimport ItemAddForm from \"../item-add-form\";\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Drink Coffee'),\r\n            this.createTodoItem('Make Awesome App'),\r\n            this.createTodoItem('Have a lunch')\r\n        ],\r\n        term: '',\r\n        filter: 'all'\r\n    };\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        }\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({todoData}) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n            const newArray = [...todoData.slice(0, idx),\r\n                ...todoData.slice(idx + 1)];\r\n\r\n            return {\r\n                todoData: newArray\r\n            }\r\n        });\r\n    };\r\n\r\n    addItem = (text) => {\r\n        const newItem = this.createTodoItem(text);\r\n        this.setState(({todoData}) => {\r\n            const newArr = [\r\n                ...todoData,\r\n                newItem\r\n            ];\r\n            return {\r\n                todoData: newArr\r\n            }\r\n        });\r\n    };\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex((el) => el.id === id);\r\n\r\n        const oldItem = arr[idx];\r\n        const newItem = {\r\n            ...oldItem,\r\n            [propName]: !oldItem[propName]\r\n        };\r\n\r\n        return [\r\n            ...arr.slice(0, idx),\r\n            newItem,\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n    }\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            };\r\n        });\r\n    };\r\n    onToggleDone = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            };\r\n        });\r\n    };\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({term});\r\n    };\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({filter});\r\n    };\r\n    search(items, term) {\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n        return items.filter((item) => {\r\n            return item.label\r\n                .toLowerCase()\r\n                .indexOf(term.toLowerCase()) > -1;\r\n        });\r\n    }\r\n\r\n    filter(items, filter) {\r\n        switch (filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter((item) => !item.done);\r\n            case 'done':\r\n                return items.filter((item) => item.done);\r\n            default:\r\n                return items;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {todoData, term, filter} = this.state;\r\n\r\n        const visibleItems = this.filter(this.search(todoData, term), filter);\r\n        const doneCount = todoData.filter((el) => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n        return (\r\n            <div className=\"todo-app\">\r\n                <AppHeader toDo={todoCount} done={doneCount}/>\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel\r\n                        onSearchChange={this.onSearchChange}/>\r\n                    <ItemStatusFilter filter={filter}\r\n                                      onFilterChange={this.onFilterChange}/>\r\n                </div>\r\n\r\n                <TodoList todos={visibleItems}\r\n                          onDeleted={this.deleteItem}\r\n                          onToggleImportant={this.onToggleImportant}\r\n                          onToggleDone={this.onToggleDone}/>\r\n\r\n                <ItemAddForm onItemAdded={this.addItem}/>\r\n            </div>\r\n        );\r\n    }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from \"./components/app\";\nReactDOM.render(<App/>,\n    document.getElementById('root'));"],"sourceRoot":""}